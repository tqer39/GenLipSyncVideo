#!/bin/bash

set -ex  # エラー時に終了し、実行コマンドを表示

# 仮想環境をディアクティベート
deactivate 2>/dev/null || true

# 必要なシステムパッケージをインストール
sudo apt update
sudo apt install -y \
    build-essential \
    cmake \
    libsox-dev \
    ffmpeg \
    libasound-dev \
    portaudio19-dev \
    libportaudio2 \
    libportaudiocpp0 \
    python3-pip \
    python3-venv \
    git

# huggingface_hub をインストール
pip install huggingface_hub

# 仮想環境の作成
uv venv --python 3.10.0
# shellcheck source=/dev/null
source .venv/bin/activate
python -V
uv pip install --upgrade pip
uv add --dev torch==2.4.1 torchvision==0.19.1 torchaudio==2.4.1

# Fish Speech の依存関係をインストール
# pip install -e "$HOME/workspace/fish-speech"[stable]

# huggingface-cli がインストールされているか確認
if ! command -v huggingface-cli &> /dev/null; then
    echo "huggingface-cli のインストールに失敗しました。"
    exit 1
fi

# モデルのダウンロード先ディレクトリを作成
mkdir -p ./models/checkpoints

# モデルをダウンロード
huggingface-cli download fishaudio/fish-speech-1.4 \
    --local-dir ./models/checkpoints/fish-speech-1.4

# $HOME/workspace ディレクトリが存在しない場合は作成
mkdir -p "$HOME/workspace"

# fish-speech リポジトリをクローンまたは更新
if [ ! -d "$HOME/workspace/fish-speech" ]; then
    echo "Fish Speech リポジトリをクローンしています..."
    git clone https://github.com/fishaudio/fish-speech.git "$HOME/workspace/fish-speech"
fi

echo "Fish Speech リポジトリが既に存在します。最新の状態に更新します..."
git -C "$HOME/workspace/fish-speech" pull origin main
git -C "$HOME/workspace/fish-speech" switch main


echo "セットアップが完了しました。"
